name: "Snowflake Terraform Demo Workflow"

on:
 push:
   branches:
     - main
 pull_request:
      
jobs:
  snowflake-terraform-demo:
    name: "Snowflake Terraform Demo Job"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with: 
         terraform_version: 1.0.10

    - name: terraform init
      id: init
      run: terraform init

    - name: terraform plan
      id: plan
      env:
         SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
         SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
         SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
         SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION }}
         SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      
      run: terraform plan -no-color -input=false
      continue-on-error: true
               
    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
         const output = #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
         #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
         #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
         #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

         <details><summary>Show Plan</summary>
         
         \`\`\`\n
         ${process.env.PLAN}
         \`\`\`
         </details>
         *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
         github.rest.issues.createComment({
         issue_number: context.issue.number,
         owner: context.repo.owner,
         repo: context.repo.repo,
         body: output
         })
      # On push to main, build or change infrastructure according to Terraform configuration files
   # - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
        SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
    #  run: terraform apply -auto-approve
      
    - name: Terraform destroy
      env:
        SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
        SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
        SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      run: terraform destroy -auto-approve
